[{"link_serial":101,"update_time":"2016-10-03T11:13:58.207000+00:00","phase_snode_id":null,"scrub_version":"48f99abcdf450e7c49a04015355fb699f785e8cbf8288d894686a64c6caeddd1","instance_id":"ccc5aa65-ced6-4ebd-a6e9-824d35160c1a","update_user_id":"hpv@snaplogic.com","class_fqid":"com-snaplogic-pipeline_8","partition_snode_id":"52e99318640a9a03d8681d10","path_id":"/snaplogic/projects/HarishPV","create_time":"2016-10-03T10:41:26.972000+00:00","snode_id":"57f235d70501860859eb5653","snap_map":{"a1f5c31b-1920-45cb-ba74-823339027cd6":{"instance_id":"a1f5c31b-1920-45cb-ba74-823339027cd6","class_id":"com-snaplogic-snaps-script-script","class_build_tag":"snapsmrc344","class_fqid":"com-snaplogic-snaps-script-script_2-snapsmrc344","class_version":2,"property_map":{"info":{"notes":{"value":null},"label":{"value":"Script1"}},"view_serial":100,"input":{"input0":{"view_type":{"value":"document"},"label":{"value":"input0"}}},"settings":{"editable_content":{"value":"# Import the interface required by the Script snap.\nfrom com.snaplogic.scripting.language import ScriptHook\n\nclass TransformScript(ScriptHook):\n    def export_table(bigquery, cloud_storage_path,\n                 project_id, dataset_id, table_id,\n                 export_format,\n                 num_retries=5,\n                 compression=\"NONE\"):\n    \n        # Generate a unique job ID so retries\n        # don't accidentally duplicate export\n        job_data = {\n        'jobReference': {\n            'projectId': project_id,\n            'jobId': str(uuid.uuid4())\n        },\n        'configuration': {\n            'extract': {\n                'sourceTable': {\n                    'projectId': project_id,\t\t\n                    'datasetId': dataset_id,\t\t\n                    'tableId': table_id,\n                },\n                'destinationUris': [cloud_storage_path],\n                'destinationFormat': export_format,\n                'compression': compression\n            }\n        }\n    }\n    return bigquery.jobs().insert(\n        projectId=project_id,\n        body=job_data).execute(num_retries=num_retries)\n\n    def __init__(self, input, output, error, log):\n        self.input = input\n        self.output = output\n        self.error = error\n        self.log = log\n\n\n    # The \"execute()\" method is called once when the pipeline is started\n    # and allowed to process its inputs or just send data to its outputs.\n    def execute(self):\n        self.log.info(\"Executing Transform script\")\n\texport_table('select * from p_ga_sessions_2016041720160423', 'storage-upload.googleapis.com/abof.ga@manthan.com/TestGA/p_ga_sessions_2016041720160423.zip', 'bigdata-1105', 'Manthan', 'p_ga_sessions_2016041720160423', 'ZIP', 5, 'NONE')\n        while self.input.hasNext():\n            try:\n                # Read the next document, wrap it in a map and write out the wrapper\n                in_doc = self.input.next()\n                wrapper = {\n                    'original' : in_doc,\n                }\n                \n                self.output.write(in_doc, wrapper)\n            except Exception as e:\n                errWrapper = {\n                    'errMsg' : str(e.args)\n                }\n                self.log.error(\"Error in python script\")\n                self.error.write(errWrapper)\n            \n        self.log.info(\"Finished executing the Transform script\")\n        \n# The Script Snap will look for a ScriptHook object in the \"hook\"\n# variable.  The snap will then call the hook's \"execute\" method.\nhook = TransformScript(input, output, error, log)"},"executable_during_suggest":{"value":true},"language":{"value":"Python"},"script":{"expression":false,"value":null}},"error":{"error0":{"view_type":{"value":"document"},"label":{"value":"error0"}},"error_behavior":{"value":"fail"}},"output":{"output0":{"view_type":{"value":"document"},"label":{"value":"output0"}}}},"instance_fqid":"a1f5c31b-1920-45cb-ba74-823339027cd6_1","instance_version":1},"96a544bb-88e9-400d-a98b-5b18bc5998f0":{"instance_id":"96a544bb-88e9-400d-a98b-5b18bc5998f0","class_id":"com-snaplogic-snaps-transform-datatransform","class_build_tag":"transform1622","class_fqid":"com-snaplogic-snaps-transform-datatransform_4-transform1622","class_version":4,"property_map":{"info":{"notes":{"value":null},"label":{"value":"Mapper"}},"view_serial":100,"input":{"input0":{"label":{"value":"input0"},"view_type":{"value":"document"}}},"settings":{"nullSafeAccess":{"value":false},"passThrough":{"value":false},"transformations":{"value":{"mappingTable":{"value":[{"targetPath":{"value":"$project_id"},"expression":{"expression":false,"value":"bigdata-1105"}},{"targetPath":{"value":"$dataset_id"},"expression":{"expression":false,"value":"Manthan"}},{"targetPath":{"value":"$table_id"},"expression":{"expression":true,"value":"\"p_ga_sessions_\" + _StartDate.replace(/\\-/g,'') + _EndDate.replace(/\\-/g,'')"}},{"targetPath":{"value":"$export_format"},"expression":{"expression":false,"value":"ZIP"}},{"targetPath":{"value":"$num_retries"},"expression":{"expression":true,"value":"5"}},{"targetPath":{"value":"$compression"},"expression":{"expression":false,"value":"NONE"}},{"targetPath":{"value":"$bigquery"},"expression":{"expression":true,"value":"\"select * from p_ga_sessions_\" + _StartDate.replace(/\\-/g,'') + _EndDate.replace(/\\-/g,'')"}},{"targetPath":{"value":"$cloud_storage_path"},"expression":{"expression":true,"value":"'storage-upload.googleapis.com/abof.ga@manthan.com/TestGA/'"}}]},"mappingRoot":{"value":"$"}}}},"error":{"error0":{"label":{"value":"error0"},"view_type":{"value":"document"}},"error_behavior":{"value":"fail"}},"output":{"output0":{"label":{"value":"output0"},"view_type":{"value":"document"}}}},"instance_fqid":"96a544bb-88e9-400d-a98b-5b18bc5998f0_1","instance_version":1},"75f71385-4b97-4003-9e28-7aa42a810b5b":{"instance_id":"75f71385-4b97-4003-9e28-7aa42a810b5b","class_id":"com-snaplogic-snaps-script-script","class_build_tag":"snapsmrc344","class_fqid":"com-snaplogic-snaps-script-script_2-snapsmrc344","class_version":2,"property_map":{"info":{"notes":{"value":null},"label":{"value":"Script"}},"view_serial":100,"input":{"input0":{"view_type":{"value":"document"},"label":{"value":"input0"}}},"settings":{"editable_content":{"value":"# Import the interface required by the Script snap.\nfrom com.snaplogic.scripting.language import ScriptHook\nfrom oauth2client import client\nfrom googleapiclient import discovery\nfrom apiclient import discovery\n#import discovery\n#from \"golang.org/x/oauth2/google\" \n#import GoogleCredentials\n#import com.google.api.client.googleapis.auth.oauth2.GoogleCredential\n\nclass TransformScript(ScriptHook):\n    def export_table(self, bigquery, cloud_storage_path,\n                 project_id, dataset_id, table_id,\n                 export_format,\n                 num_retries,\n                 compression):\n    \n        # Generate a unique job ID so retries\n        # don't accidentally duplicate export\n        import uuid\n        job_data = {\n        'jobReference': {\n            'projectId': project_id,\n            'jobId': str(uuid.uuid4())\n            },\n        'configuration': {\n            'extract': {\n                'sourceTable': {\n                    'projectId': project_id,\t\t\n                    'datasetId': dataset_id,\t\t\n                    'tableId': table_id,\n                    },\n                'destinationUris': cloud_storage_path,\n                'destinationFormat': export_format,\n                'compression': compression\n                }\n            }\n        }\n        return bigquery.jobs().insert(\n            projectId=project_id,\n            body=job_data).execute(num_retries=num_retries)\n\n    def __init__(self, input, output, error, log):\n        self.input = input\n        self.output = output\n        self.error = error\n        self.log = log\n\n    # The \"execute()\" method is called once when the pipeline is started\n    # and allowed to process its inputs or just send data to its outputs.\n    def execute(self):\n        self.log.info(\"Executing Transform script\")\n        credentials = GoogleCredentials.get_application_default()\n        bigquery = build('bigquery', 'v2', credentials=credentials)\n        #a = self.export_table(bigquery, 'https://console.cloud.google.com/storage/browser/testgaexport/p_ga_sessions_2016041720160423.zip', 'bigdata-1105', 'Manthan', 'p_ga_sessions_2016041720160423', 'ZIP', 5, 'NONE')\n        a = self.export_table(bigquery, 'gs:///manthantest-140505.appspot.com/p_ga_sessions_2016041720160423.zip', 'bigdata-1105', 'Manthan', 'p_ga_sessions_2016041720160423', 'ZIP', 5, 'NONE')\n        self.log.info(\"Finished executing the Transform script\")\n        \n# The Script Snap will look for a ScriptHook object in the \"hook\"\n# variable.  The snap will then call the hook's \"execute\" method.\nhook = TransformScript(input, output, error, log)"},"executable_during_suggest":{"value":true},"language":{"value":"Python"},"script":{"expression":false,"value":null}},"error":{"error0":{"view_type":{"value":"document"},"label":{"value":"error0"}},"error_behavior":{"value":"fail"}},"output":{"output0":{"view_type":{"value":"document"},"label":{"value":"output0"}}}},"instance_fqid":"75f71385-4b97-4003-9e28-7aa42a810b5b_1","instance_version":1}},"org_snode_id":"52e99318640a9a03d8681d0d","path":"/snaplogic/projects/HarishPV/Step2_ExportCustomTable2GoogleDrive","instance_version":2,"migrate_version":"mrc260","scrub_backup":[],"create_user_id":"hpv@snaplogic.com","project_snode_id":"5763bccf95315c69540c7463","property_map":{"info":{"notes":{"value":null},"label":{"value":"Step2_ExportCustomTable2GoogleDrive"},"purpose":{"value":null},"pipeline_doc_uri":{"value":null},"author":{"value":"hpv@snaplogic.com"}},"input":{"96a544bb-88e9-400d-a98b-5b18bc5998f0_input0":{"view_type":{"value":"document"},"label":{"value":"Mapper - input0"}},"a1f5c31b-1920-45cb-ba74-823339027cd6_input0":{"label":{"value":"Script1 - input0"},"view_type":{"value":"document"}}},"settings":{"param_table":{"value":[{"capture":{"value":false},"value":{"value":"2016-04-17"},"key":{"value":"StartDate"}},{"capture":{"value":false},"value":{"value":"2016-04-23"},"key":{"value":"EndDate"}}]}},"instance_version":1,"error":{"error_behavior":{"value":"none"}},"output":{"a1f5c31b-1920-45cb-ba74-823339027cd6_output0":{"label":{"value":"Script1 - output0"},"view_type":{"value":"document"}},"75f71385-4b97-4003-9e28-7aa42a810b5b_output0":{"label":{"value":"Script - output0"},"view_type":{"value":"document"}}}},"render_map":{"pan_x_num":0,"default_snaplex":"575ad30664cabf28883d6351","scale_ratio":1,"detail_map":{"a1f5c31b-1920-45cb-ba74-823339027cd6":{"grid_x_int":6,"error":{},"grid_y_int":1,"rot_tail_int":0,"input":{},"output":{},"rot_int":0},"96a544bb-88e9-400d-a98b-5b18bc5998f0":{"grid_x_int":3,"error":{},"grid_y_int":1,"rot_tail_int":0,"input":{},"output":{},"rot_int":0},"75f71385-4b97-4003-9e28-7aa42a810b5b":{"grid_x_int":4,"error":{},"grid_y_int":1,"rot_tail_int":0,"input":{},"output":{},"rot_int":0}},"pan_y_num":0},"org_id":"52e99318640a9a03d8681d0d","class_version":8,"class_id":"com-snaplogic-pipeline","instance_fqid":"ccc5aa65-ced6-4ebd-a6e9-824d35160c1a_2","link_map":{"link100":{"src_view_id":"output0","dst_view_id":"input0","src_id":"96a544bb-88e9-400d-a98b-5b18bc5998f0","dst_id":"75f71385-4b97-4003-9e28-7aa42a810b5b"}}}]